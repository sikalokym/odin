on:
  workflow_call:
      inputs:
        environment:
          required: false
          type: string
          default: Development
      secrets:
        client-id:
          required: true
        tenant-id:
          required: true
        subscription-id:
          required: true
        terraform-token:
          required: true

env:
  TF_CLOUD_ORGANIZATION: ${{ vars.TF_CLOUD_ORGANIZATION }}
  TF_CLOUD_PROJECT: ${{ vars.TF_CLOUD_PROJECT }}
  TF_WORKSPACE: ${{ vars.TF_WORKSPACE }}
  ARM_CLIENT_ID: ${{ secrets.client-id }}
  ARM_SUBSCRIPTION_ID: ${{ secrets.subscription-id }}
  ARM_TENANT_ID:  ${{ secrets.tenant-id }}

permissions:
  id-token: write # Require write permission to Fetch an OIDC token. 
  contents: read
      
jobs:
  terraform-plan:
    name: Terraform Plan
    runs-on: vcc-azure-ubuntu-latest
    environment: ${{ inputs.environment }}
    steps:
      - uses: actions/checkout@v4

      - name: Azure Login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.client-id }}
          tenant-id: ${{ secrets.tenant-id }}
          subscription-id: ${{ secrets.subscription-id }}

      - uses: hashicorp/setup-terraform@v2.0.3
        with:
          cli_config_credentials_token: ${{ secrets.terraform-token }}

      - name: Terraform Init
        run: terraform -chdir=terraform init

      - name: Terraform Plan
        run: terraform -chdir=terraform plan -var-file tfvars/dev.tfvars -input=false -out=odin.${{ inputs.environment }}.tfplan

      - name: Upload Terraform Plan for deployment jobs
        uses: actions/upload-artifact@v4
        with:
          name: terraform-plan
          path: terraform/odin.${{ inputs.environment }}.tfplan

  terraform-apply-approval:
    name: Terraform Apply Approval
    runs-on: ubuntu-latest
    needs: [terraform-plan]
    environment: terraform-apply-approval
    steps:
    - name: 'Terraform Apply status'
      run: echo "Terraform Apply approved!"
  
  terraform-apply:
    name: Terraform Apply
    needs: [terraform-plan, terraform-apply-approval]
    runs-on: vcc-azure-ubuntu-latest
    environment: ${{ inputs.environment }}
    steps:
      - uses: actions/checkout@v4
      
      - name: Azure Login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.client-id }}
          tenant-id: ${{ secrets.tenant-id }}
          subscription-id: ${{ secrets.subscription-id }}

      - uses: hashicorp/setup-terraform@v2.0.3
        with:
          cli_config_credentials_token: ${{ secrets.terraform-token }}
