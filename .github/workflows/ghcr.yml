name: ghcr github action
on: [push]
jobs:
  job1:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - id: set-matrix
        # run: echo "matrix={\"include\":[{\"project\":\"foo\",\"config\":\"Debug\"},{\"project\":\"bar\",\"config\":\"Release\"}]}" >> $GITHUB_OUTPUT
        run: echo "matrix={\"include\":[{\"additions\":83,\"deletions\":0,\"path\":\".github/workflows/ghcr.yml\"},{\"additions\":17,\"deletions\":11,\"path\":\".github/workflows/test_backend.yml\"},{\"additions\":1,\"deletions\":1,\"path\":\"backend/requirements.txt\"},{\"additions\":2,\"deletions\":10,\"path\":\"docker/run_test/compose.yml\"},{\"additions\":25,\"deletions\":0,\"path\":\"docker/run_test/compose_builder.yml\"},{\"additions\":1,\"deletions\":1,\"path\":\"docker/run_test/database/database.Dockerfile\"}]}" >> $GITHUB_OUTPUT
  job2:
    needs: job1
    runs-on: ubuntu-latest
    # strategy:
    #   matrix: ${{ fromJSON(needs.job1.outputs.matrix) }}
    steps:
      - env:
          matrix: ${{ fromJSON(needs.job1.outputs.matrix) }}
        run: echo "Matrix - Project ${{ env.matrix.path }}, Config ${{ env.matrix.additions }}"
  # pull-request-review:
  #   runs-on: vcc-azure-ubuntu
  #   permissions:
  #     contents: read
  #     packages: write
  #     id-token: write
  #     pull-requests: read
  #     repository-projects: read
  #     statuses: read
  #     checks: read
  #     issues: read
  #     actions: read
  #   outputs:
  #     output1: ${{ steps.prr.outputs.matrix }}
  #   steps:
  #     - uses: actions/checkout@v2
      
  #     - name: Pull Request Review
  #       id: prr
  #       env:
  #         GH_TOKEN: ${{ github.token }}
  #         PR_NUMBER: ${{ github.event.number }}
  #       run: |
  #         echo "matrix={\"include\":[{\"project\":\"foo\",\"config\":\"Debug\"},{\"project\":\"bar\",\"config\":\"Release\"}]}" >> $GITHUB_OUTPUT
  #         # echo "test=$(gh pr view $PR_NUMBER --json files --jq '.files')" >> "$GITHUB_OUTPUT"

  # test_job:
  #   runs-on: vcc-azure-ubuntu
  #   needs: pull-request-review
  #   steps:
  #     - env:
  #         OUTPUT1: ${{ fromJSON(needs.pull-request-review.outputs.output1) }}
  #       run: echo "$OUTPUT1"
  
  # publish-database-docker-image:
  #   runs-on: vcc-azure-ubuntu
  #   permissions:
  #     contents: read
  #     packages: write
  #     id-token: write
  #   steps:
  #     - uses: actions/checkout@v2
      
  #     - name: Set up Docker
  #       uses: docker/setup-docker-action@v4
      
  #     - name: Login to GitHub Container Registry
  #       uses: docker/login-action@v3.4.0
  #       with:
  #         registry: ghcr.io
  #         username: ${{ github.actor }}
  #         password: ${{ secrets.GITHUB_TOKEN }}

  #     - name: Build and push test_database Docker image
  #       run: |
  #         docker compose -f docker/run_test/compose_builder.yml build --no-cache database
  #         docker push ghcr.io/volvo-cars/test_odin_database:latest

  # publish-backend-docker-image:
  #   runs-on: ubuntu-latest
  #   permissions:
  #     contents: read
  #     packages: write
  #     id-token: write
  #   steps:
  #     - name: Set up Docker
  #       uses: docker/setup-docker-action@v4

  #     - uses: actions/checkout@v2
      
  #     - name: Login to GitHub Container Registry
  #       uses: docker/login-action@v3.4.0
  #       with:
  #         registry: ghcr.io
  #         username: ${{ github.actor }}
  #         password: ${{ secrets.GITHUB_TOKEN }}

  #     - name: Build and push test_backend Docker image
  #       run: |
  #         docker compose -f docker/run_test/compose_builder.yml build --no-cache backend
  #         docker push ghcr.io/volvo-cars/test_odin_backend:latest
